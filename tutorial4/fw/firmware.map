
Memory Configuration

Name             Origin             Length             Attributes
BOOTROM          0x0000000000100000 0x0000000000004000 xr
APPROM           0x0000000000104000 0x00000000003fc000 xr
RAM              0x0000000000000000 0x0000000000020000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000100000                __bootrom_start__ = ORIGIN (BOOTROM)
                0x0000000000004000                __bootrom_size__ = LENGTH (BOOTROM)
                0x0000000000104000                __approm_start__ = ORIGIN (APPROM)
                0x00000000003fc000                __approm_size__ = LENGTH (APPROM)

.text           0x0000000000104000       0x60
                0x0000000000104000                . = ALIGN (0x4)
 *(.text)
 .text          0x0000000000104000       0x3c firmware.o
                0x0000000000104000                putchar
                0x0000000000104020                print_str
 *(.text*)
 .text.startup  0x000000000010403c       0x14 firmware.o
                0x000000000010403c                main
 *(.rodata)
 *(.rodata*)
 *fill*         0x0000000000104050        0x0 
 .rodata.str1.4
                0x0000000000104050        0xd firmware.o
 *(.srodata)
 *(.srodata*)
                0x0000000000104060                . = ALIGN (0x4)
 *fill*         0x000000000010405d        0x3 
                0x0000000000104060                _etext = .
                0x0000000000104060                _sidata = _etext

.data           0x0000000000000000        0x0 load address 0x0000000000104060
                0x0000000000000000                . = ALIGN (0x4)
                0x0000000000000000                _sdata = .
                0x0000000000000000                _ram_start = .
                0x0000000000000000                . = ALIGN (0x4)
 *(.data)
 .data          0x0000000000000000        0x0 firmware.o
 *(.data*)
 *(.sdata)
 *(.sdata*)
                0x0000000000000000                . = ALIGN (0x4)
                0x0000000000000000                _edata = .

.bss            0x0000000000000000        0x0 load address 0x0000000000104060
                0x0000000000000000                . = ALIGN (0x4)
                0x0000000000000000                _sbss = .
 *(.bss)
 .bss           0x0000000000000000        0x0 firmware.o
 *(.bss*)
 *(.sbss)
 *(.sbss*)
 *(COMMON)
                0x0000000000000000                . = ALIGN (0x4)
                0x0000000000000000                _ebss = .
LOAD firmware.o
LOAD /opt/riscv32i/lib/gcc/riscv32-unknown-elf/12.2.0/libgcc.a
OUTPUT(firmware.elf elf32-littleriscv)

.comment        0x0000000000000000       0x1b
 .comment       0x0000000000000000       0x1b firmware.o
                                         0x1c (size before relaxing)

.riscv.attributes
                0x0000000000000000       0x21
 .riscv.attributes
                0x0000000000000000       0x21 firmware.o
